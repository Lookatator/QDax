name: ci

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/qdax

jobs:
  style:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/qdax/test:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run pre-commits
        run: |
          pre-commit run --all-files isort
          pre-commit run --all-files black
          pre-commit run --all-files nbstripout
          pre-commit run --all-files debug-statements
          pre-commit run --all-files check-ast
          pre-commit run --all-files check-merge-conflict

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/qdax/test:${{ github.ref_name }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run pytests
        run: |
          pytest -vv tests

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: dev.Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max

      - name: Build and push test Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dev.Dockerfile
          push: true
          target: test-image
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/test:${{github.ref_name}}"
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
